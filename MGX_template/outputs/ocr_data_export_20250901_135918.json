{
  "export_info": {
    "timestamp": "2025-09-01T13:59:18.769146",
    "total_entries": 2,
    "format_version": "1.0"
  },
  "data": [
    {
      "name": "",
      "date": "",
      "diet_content": [],
      "training_load": "",
      "sleep_data": "",
      "confidence_score": 0.8145454545454546,
      "raw_text": "4 paddle: : framework: :PirInterpreter: :TraceRunImpl()\n\n5 paddle: : framework: :PirInterpreter: :TraceRunInstructionList (std: : vector<std: :unique_ptr<paddle: : framework: :InstructionBase, std::default_delete<paddle: : framewor\n\nstd: :unique_ptr<paddle: : framework: :InstructionBase, std::default_delete<paddle: : framework: :InstructionBase> > > > const&)\n\n6 paddle: : framework: :PirInterpreter: :RunInstructionBase (paddle: : framework: : InstructionBasex)\n\n7 paddle: : framework: :PhikKernelInstruction: :Run()\n\n8 void phi::KernelImpl<void (*)(phi::GPUContext const&, phi::DenseTensor const&, phi::DenseTensor const&, phi::DenseTensor const&, paddle: :optional<phi: :DenseTer\n\nocator<int> > const&, std::vector<int, std::allocator<int> > const&, std::string const&, std::vector<int, std::allocator<int> > const&, int, std::string const&, st\n\ntrallocator<int> > const&, bool, int, float, phi::DenseTensor*, std::vector<phi: :DenseTensor*, std::allocator<phi: :DenseTensorx> >), &(void phi: : fusion: :FusedConvz\n\nphi: :GPUContext const&, phi::DenseTensor const&, phi::DenseTensor const&, phi::DenseTensor const&, paddle: :optional<phi: :DenseTensor> const&, std::vector<int, std:\n\nint, std::allocator<int> > const&, std::string const&, std::vector<int, std::allocator<int> > const&, int, std::string const&, std::string const&, std::vector<int,\n| nt, float, phi::DenseTensorx, std::vector<phi: :DenseTensorx, std::allocator<phi: :DenseTensorx> >))>::KernelCallHeLper<paddle: :optional<phi: :DenseTensor> const&, s1\n\nonst&, std::vector<int, std::allocator<int> > const&, std::string const&, std::vector<int, std::allocator<int> > const&, int, std::string const&, std::string const\n\n> > const&, bool, int, float, phi::DenseTensor*, std::vector<phi: :DenseTensor*, std::allocator<phi: :DenseTensor*> >, phi::TypeTag<int> >::Compute<1, 3, 0, 0, phi::\n\nst, phi::DenseTensor const, phi::DenseTensor const>(phi: :KernelContext*, phi::GPUContext const&, phi::DenseTensor const&, phi::DenseTensor const&, phi: :DenseTensor\n",
      "timestamp": "2025-09-01T13:58:20.654964"
    },
    {
      "name": "",
      "date": "",
      "diet_content": [],
      "training_load": "",
      "sleep_data": "",
      "confidence_score": 0.9566666666666667,
      "raw_text": "Data Completeness Overview\n",
      "timestamp": "2025-09-01T13:59:13.939122"
    }
  ],
  "metadata": [
    {
      "entry_id": 1,
      "processing_time": "2025-09-01T13:58:20.654975",
      "filename": "Snipaste_2025-09-01_13-48-48.png",
      "file_size": 148260,
      "processing_method": "ocr"
    },
    {
      "entry_id": 2,
      "processing_time": "2025-09-01T13:59:13.939137",
      "filename": "Snipaste_2025-09-01_13-58-56.png",
      "file_size": 7406,
      "processing_method": "ocr"
    }
  ]
}